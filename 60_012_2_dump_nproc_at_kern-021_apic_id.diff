diff -ru 012_2_dump_nproc_at_kern/Makefile 021_lapic_id/Makefile
--- 012_2_dump_nproc_at_kern/Makefile	2019-06-23 21:00:40.014172174 +0900
+++ 021_lapic_id/Makefile	2019-06-25 22:52:41.241281660 +0900
@@ -2,8 +2,8 @@
 CFLAGS = -Wall -Wextra -nostdinc -nostdlib -fno-builtin -fno-common -Iinclude
 LDFLAGS = -Map kernel.map -s -x -T kernel.ld
 OBJS = main.o syscall.o proc.o iv.o fbcon.o fb.o font.o kbc.o x86.o	\
-	intr.o pic.o sched.o hpet.o acpi.o nic.o pci.o handler.o fs.o	\
-	common.o
+	intr.o pic.o apic.o sched.o hpet.o acpi.o nic.o pci.o		\
+	handler.o fs.o common.o
 
 $(TARGET): $(OBJS)
 	ld $(LDFLAGS) -o $@ $+
021_lapic_id のみに存在: apic.c
021_lapic_id/include のみに存在: apic.h
diff -ru 012_2_dump_nproc_at_kern/main.c 021_lapic_id/main.c
--- 012_2_dump_nproc_at_kern/main.c	2019-06-23 21:00:40.030172041 +0900
+++ 021_lapic_id/main.c	2019-06-25 22:52:41.245281648 +0900
@@ -1,6 +1,7 @@
 #include <x86.h>
 #include <intr.h>
 #include <pic.h>
+#include <apic.h>
 #include <acpi.h>
 #include <fb.h>
 #include <kbc.h>
@@ -22,15 +23,46 @@
 
 #define INIT_APP	"test"
 
+/* コンソールへアクセス可能なCPUを管理(同時アクセスを簡易的に防ぐ) */
+unsigned char con_access_perm = 0;
+
 void start_kernel(void *_t __attribute__((unused)), struct platform_info *pi,
 		  void *_fs_start)
 {
+	unsigned char pnum = get_pnum();
+
+	/* APの場合、初期化処理をスキップ */
+	if (pnum) {
+		/* 自分の番まで待つ */
+		while (con_access_perm != pnum);
+
+		/* AP自身のプロセッサ番号を表示 */
+		puth(pnum, 1);
+
+		/* 次の番へ回す */
+		con_access_perm++;
+
+		/* haltして待つ */
+		while (1)
+			cpu_halt();
+	}
+
 	/* フレームバッファ周りの初期化 */
 	fb_init(&pi->fb);
 	set_fg(255, 255, 255);
 	set_bg(0, 70, 250);
 	clear_screen();
 
+	/* BSP自身のプロセッサ番号を表示 */
+	puth(pnum, 1);
+
+	/* 次の番へ回す */
+	con_access_perm++;
+
+	/* haltして待つ */
+	while (1)
+		cpu_halt();
+
 	/* ACPIの初期化 */
 	acpi_init(pi->rsdp);
 
@@ -38,14 +70,6 @@
 	gdt_init();
 	intr_init();
 
-	/* ブートローダーから渡されたプロセッサ数を表示 */
-	puts("NPROC ");
-	puth(pi->nproc, 1);
-
-	/* haltして待つ */
-	while (1)
-		cpu_halt();
-
 	/* 周辺ICの初期化 */
 	pic_init();
 	hpet_init();
